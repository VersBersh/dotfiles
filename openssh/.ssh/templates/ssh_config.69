# *********************************************
# * OpenSSH 6.6 Client Hardened Configuration *
# *********************************************

# Defaults for all hosts
Host *
    # Pattern-list of unknown options to be ignored during parsing
    #IgnoreUnknown
    # Specifies which address family should be used (any|inet|inet6)
    AddressFamily any
    # Disables password prompts & defaults ServerAliveInterval to 300s
    BatchMode no
    # Use the specified address on the local machine as the source address
    #BindAddress
    # List of domain suffixes in which to search for the destination host
    #CanonicalDomains
    # Fallback to the system resolver's search rules in case of failure
    CanonicalizeFallbackLocal yes
    # Enable explicit hostname canonicalization (yes|always|no)
    CanonicalizeHostname no
    # Max dot characters in a hostname before disabling canonicalization
    CanonicalizeMaxDots 1
    # Rules for following CNAMEs when canonicalizing hostnames
    #CanonicalizePermittedCNAMEs
    # Request challenge-response authentication
    ChallengeResponseAuthentication yes
    # Check the server's IP address in the known_hosts file
    CheckHostIP yes
    # Cipher to use for session encryption [v1 only]
    Cipher 3des
    # Ciphers to use for session encryption by preference [v2 only]
    Ciphers chacha20-poly1305@openssh.com,aes256-gcm@openssh.com,aes128-gcm@openssh.com,aes256-ctr,aes192-ctr,aes128-ctr
    # Clears all local, remote & dynamic port forwardings
    ClearAllForwardings no
    # Use compression if available
    Compression yes
    # Compression level to use [v1 only]
    CompressionLevel 6
    # Number of connection attempts before exiting
    ConnectionAttempts 1
    # Timeout for connections instead of the default system TCP timeout
    #ConnectTimeout 0
    # Enable sharing of multiple sessions over a single connection (yes|ask|auto|autoask|no)
    ControlMaster no
    # Path to the control sockets used for connection sharing
    ControlPath "~/.ssh/sockets/%r@%h:%p"
    # Persist the master connection to a host after all connections are closed
    ControlPersist no
    # Enable usage of ssh-keysign(8) during HostBasedAuthentication
    EnableSSHKeysign no
    # Set the escape character
    EscapeChar ~
    # Terminate the connection if all requested forwardings cannot be set up
    ExitOnForwardFailure no
    # Hash algorithm used when displaying key fingerprints (md5|sha256)
    FingerprintHash sha256
    # Forward the connection to the authentication agent to the remote host
    ForwardAgent no
    # Automatically redirect X11 connections & set the DISPLAY variable
    ForwardX11 no
    # Timeout for untrusted X11 forwarding after which X11 connections are refused
    ForwardX11Timeout 20m
    # Allow remote X11 clients full access to the original X11 display
    ForwardX11Trusted yes
    # Allow remote hosts to connect to ports forwarded by the client
    GatewayPorts no
    # Specifies the file(s) to use for the global host key database
    GlobalKnownHostsFile "/etc/ssh/ssh_known_hosts"
    # Request GSSAPI authentication [v2 only]
    GSSAPIAuthentication no
    # Forward (delegate) GSSAPI credentials to the server [v2 only]
    GSSAPIDelegateCredentials no
    # Allow GSSAPI key exchange [v2 only]
    GSSAPIKeyExchange no
    # Force rekeying of the connection when GSSAPI credentials are renewed [v2 only]
    GSSAPIRenewalForcesRekey yes
    # Indicates that DNS is trusted to canonicalise the name of the host [v2 only]
    GSSAPITrustDns no
    # Hash host names & addresses when they are added to the known_hosts file
    HashKnownHosts no
    # Request rhosts based authentication with public key authentication [v2 only]
    HostbasedAuthentication no
    # List of key types used for host-based authentication
    HostbasedKeyTypes ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp256,ssh-rsa-cert-v01@openssh.com,ssh-rsa
    # Harden the permitted host key algorithms [v2 only]
    # * Preference only RSA HKAs
    #HostKeyAlgorithms ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
    # * As above, but include the ED25519 HKAs
    #HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
    # * As above, but include the ECDSA HKAs (suspect NIST curves)
    HostKeyAlgorithms ssh-ed25519-cert-v01@openssh.com,ssh-ed25519,ecdsa-sha2-nistp521-cert-v01@openssh.com,ecdsa-sha2-nistp521,ecdsa-sha2-nistp384-cert-v01@openssh.com,ecdsa-sha2-nistp384,ecdsa-sha2-nistp256-cert-v01@openssh.com,ecdsa-sha2-nistp256,ssh-rsa-cert-v01@openssh.com,ssh-rsa-cert-v00@openssh.com,ssh-rsa
    # Default RSA identity file [v1 only]
    #IdentityFile "~/.ssh/identity"
    # Default DSA identity file [v2 only]
    #IdentityFile "~/.ssh/id_dsa"
    # Default RSA identity file [v2 only]
    IdentityFile "~/.ssh/id_rsa"
    # Default ECDSA identity file [v2 only]
    #IdentityFile "~/.ssh/id_ecdsa"
    # Default ED25519 identity file [v2 only]
    IdentityFile "~/.ssh/id_ed25519"
    # Don't use identities provided by ssh-agent(1)
    IdentitiesOnly no
    # Specifies the IPv4 type-of-service or DSCP class for connections
    IPQoS lowdelay throughput
    # Request keyboard-interactive authentication
    KbdInteractiveAuthentication yes
    # List of keyboard-interactive authentication methods to use (defaults to server's list)
    #KbdInteractiveDevices
    # Harden the permitted key exchange algorithms
    # * Preference only secure DH KEXs (subject to sane moduli config)
    #KexAlgorithms diffie-hellman-group-exchange-sha256
    # * As above, but include the Curve25519 KEX
    #KexAlgorithms curve25519-sha256@libssh.org,diffie-hellman-group-exchange-sha256
    # * As above, but include the NIST ECDH KEXs (suspect curves)
    KexAlgorithms curve25519-sha256@libssh.org,ecdh-sha2-nistp521,ecdh-sha2-nistp384,ecdh-sha2-nistp256,diffie-hellman-group-exchange-sha256
    # Set the verbosity level to use for logging messages
    LogLevel INFO
    # Harden the permitted message authentication code algorithms [v2 only]
    MACs hmac-sha2-512-etm@openssh.com,hmac-sha2-256-etm@openssh.com,hmac-ripemd160-etm@openssh.com,umac-128-etm@openssh.com,hmac-sha2-512,hmac-sha2-256,hmac-ripemd160,umac-128@openssh.com
    # Disable host authentication for localhost
    NoHostAuthenticationForLocalhost no
    # Number of password prompts before giving up
    NumberOfPasswordPrompts 3
    # Request password authentication
    PasswordAuthentication yes
    # Allow local command execution via LocalCommand or the escape sequence
    PermitLocalCommand no
    # Specifies which PKCS#11 provider to use
    #PKCS11Provider
    # Specifies the port number to connect to on the remote host
    Port 22
    # Order in which to try authentication methods [v2 only]
    PreferredAuthentications gssapi-with-mic,hostbased,publickey,keyboard-interactive,password
    # Only use protocol version 2 due to numerous security & feature improvements
    Protocol 2
    # Requests ProxyCommand to return a connected file descriptor back to ssh(1)
    ProxyUseFdpass no
    # Request public key authentication [v2 only]
    PubkeyAuthentication yes
    # Max data/time transmitted/elapsed before renegotiating the session key [v2 only]
    RekeyLimit default 1h
    # Request a psuedo-tty for the session if opening a login session (yes|auto|force|no)
    RequestTTY auto
    # Attempt rhosts based authentication with RSA host authentication [v1 only]
    RhostsRSAAuthentication no
    # Attempt RSA authentication [v1 only]
    RSAAuthentication yes
    # Send our locale environment variables to the remote host if supported [v2 only]
    SendEnv LANG LC_*
    # Maximum number of server alive messages to be sent without a client reply [v2 only]
    ServerAliveCountMax 3
    # Timeout interval to send a server alive message if no data is received [v2 only]
    ServerAliveInterval 15
    # File creation umask for Unix-domain socket files for port forwarding
    StreamLocalBindMask 0177
    # Remove any existing Unix-domain socket file before creating a new one (yes|no)
    StreamLocalBindUnlink no
    # Never automatically add host keys & refuse connection if mismatch (yes|ask|no)
    StrictHostKeyChecking ask
    # Send TCP keepalive messages to servers to detect dead connections
    TCPKeepAlive yes
    # Request tun(4) device forwarding between the client and server (yes|point-to-point|ethernet|no)
    Tunnel no
    # Specifies the tun(4) devices to open on the client & the server
    TunnelDevice any:any
    # Accept additional server host keys after authentication (yes|ask|no)
    UpdateHostKeys no
    # Use a privileged port for outgoing connections
    UsePrivilegedPort no
    # Specifies the file(s) to use for the user host key database
    UserKnownHostsFile "~/.ssh/known_hosts"
    # Mitigate bug in unpatched versions causing potential memory disclosure
    UseRoaming no
    # Verification of the remote host key using DNS with SSHFP RRs (yes|ask|no) [v2 only]
    VerifyHostKeyDNS no
    # Display an ASCII art representation of the remote host key fingerprint
    VisualHostKey no
    # Location of the xauth(1) program
    #XAuthLocation /usr/bin/xauth

# vim: syntax=sshconfig cc=80 tw=79 ts=4 sw=4 sts=4 et sr
